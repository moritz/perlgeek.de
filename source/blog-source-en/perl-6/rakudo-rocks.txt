Rakudo Rocks

<p>Ok, we all knew that Rakudo (for the casual reader: the Perl 6 compiler
based on <a href="http://www.parrot.org/">Parrot</a>) rocks. You probably knew
the <a href="http://rakudo.de/">regularly updated progress graph</a> already
that tells us how many tests Rakudo passes.</p>

<p>You hopefully also read <a
href="http://use.perl.org/~masak/journal/">Carl MÃ¤sak's use.perl.org blog</a>,
where he tells you about a lot of nasty bugs, but at the same is quite
enthusiastic.</p>

<p>If you ever wrote a grammar with Rakudo, you know that feeling very well -
it's <em>so</em> nice that it actually works.</p>

<p>Man, we have parametric roles, Junctions autothread over user-defined
functions, grammars and regexes are in place, the most important control
structures, exceptions, you name it.</p>

<p>The other day I did some charts, and found something interesting: Rakudo
passes 700 more test each month, on average. Since Mai 2008. Really.</p>

<img src="/static/rakudo-progress.png" width="792" height="612"
alt="regression analysis of the number of passing tests. It goes up." />

<p>The chart shows the number of passing tests over the number of days since
2008-05-22, the start of our records. The red, dashed line is what we call a
"regression", a line that is drawn in such a way that the squared distance to
the actual graph is as small as possible. It's calculated by the plotting
program <a href="http://en.wikipedia.org/wiki/Xmgrace">xmgrace</a>, which also
gave me the magic equation by which the line was drawn:</p> 

<pre>y = 394.15 + 23.071 * x</pre>

<p>That basically means that the offset on the left is 394, and 23 new tests
pass every day - on average. If you multiply that number by 30, the days in
month, you'll get 692 new tests per month (or 715 if your month has 31
days).</p>

[% option no-header %][% option no-footer %]
[% comment
    vim: spell spelllang=en_us ft=html
%]
