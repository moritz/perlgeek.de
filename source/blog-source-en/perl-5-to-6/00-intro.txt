Introduction
<!-- 1221948000 -->

<h3><a class='u'
name="NAME"
>NAME</a></h3>

<p>&#34;Perl 5 to 6&#34; - Introduction</p>

<h3><a class='u'
name="SYNOPSIS"
>SYNOPSIS</a></h3>

<pre>    Learn Perl 6 (if you already know Perl 5)
    Learn to love Perl 6
    Understand why</pre>

<h3><a class='u'
name="DESCRIPTION"
>DESCRIPTION</a></h3>

<p>Perl 6 is under-documented. That&#39;s no surprise, because (apart from the specification) writing a compiler for Perl 6 seems to be much more urgent than writing documentation that targets the user.</p>

<p>Unfortunately that means that it&#39;s not easy to learn Perl 6, and that you have to have a profound interest in Perl 6 to actually find the motivation to learn it from the specification, IRC channels or from the test suite.</p>

<p>This project, which I&#39;ll preliminary call &#34;Perl 5 to 6&#34; (for lack of a better name) attempts to fill that gap with a series of short articles.</p>

<p>Each lesson has a rather limited scope, and tries to explain the two or three most important points with very short examples. It also tries to explain why things changed from Perl 5 to 6, and why this is important. I also hope that the knowledge you gain from reading these lessons is enough to basically understand the Synopses, which are the canonical source of all Perl 6 wisdom.</p>

<p>To keep the reading easy, each lesson should not exceed 200 lines or 1000 words (but it&#39;s a soft limit).</p>

<p>Perhaps the lessons are too short to learn a programming language from them, but I hope that they draw an outline of the language design, which allows you to see its beauty without having to learn the language.</p>

<h3><a class='u'
name="IT&#39;S_NOT"
>IT&#39;S NOT</a></h3>

<p>This is not a guide for converting Perl 5 to Perl 6 programs. It is also not a comprehensive list of differences.</p>

<p>It is also not oriented on the current state of the implementations, but on the ideal language as specified.</p>

<h3><a class='u'
name="ROADMAP"
>ROADMAP</a></h3>

<p>Already written or in preparation:</p>

<pre>    00 Intro
    01 Strings, Arrays, Hashes
    02 Types
    03 Control structures
    04 Subs and Signatures
    05 Objects and Classes
    06 Contexts
    07 Rules
    08 Junctions
    09 Comparisons and Smartmatching
    10 Containers and Binding
    11 Basic Operators
    12 Laziness (-)
    13 Custom Operators (-)
    14 the MAIN sub
    15 Twigils
    16 Enums
    17 Unicode (-)
    18 Scoping
    19 More Regexes
    20 A Grammar for XML
    21 Subset types
    22 State of the Implementations
    23 Quoting and Parsing (-)
    24 Recude meta operator
    25 Cross meta operator
    26 Exceptions and control exceptions</pre>

<p>(Things that are not or mostly not implemented in Rakudo are marked with <code>(-)</code>)</p>

<p>Things that I want to write about, but which I don&#39;t know well enough yet:</p>

<pre>    Macros
    Meta Object Programming
    Concurrency
    IO</pre>

<p>Things that I want to mention somewhere, but don&#39;t know where</p>

<pre>    .perl method</pre>

<p>I&#39;ll also update these lessons from time to time make sure they are not too outdated.</p>

<h3><a class='u'
name="AUTHOR"
>AUTHOR</a></h3>

<p>Moritz Lenz, <a href="http://perlgeek.de/" class="podlinkurl"
>http://perlgeek.de/</a>, <code>moritz@faui2k3.org</code></p>

<h3><a class='u'
name="LINKS"
>LINKS</a></h3>

<p>Other documentation efforts can be found on <a href="http://perl6.org/documentation/" class="podlinkurl"
>http://perl6.org/documentation/</a>.</p>

[% option no-header %] [% option no-footer %]
