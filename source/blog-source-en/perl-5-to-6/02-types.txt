Types
<!-- 1221950400 -->

<h3><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME</a></h3>

<p>&#34;Perl 5 to 6&#34; Lesson 02 - Types</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS</a></h3>

<pre>    my Int $x = 3;
    $x = &#34;foo&#34;;         # error
    say $x.WHAT;        # &#39;Int()&#39;
 
    # check for a type:
    if $x ~~ Int {
        say &#39;$x contains an Int&#39;
    }</pre>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION</a></h3>

<p>Perl 6 has types. Everything is an Object in some way, and has a type. Variables can have type constraints, but they don&#39;t need to have one.</p>

<p>There are some basic types that you should know about:</p>

<pre>    &#39;a string&#39;      # Str
    2               # Int
    3.14            # Num
    (1, 2, 3)       # List</pre>

<p>All &#34;normal&#34; built-in types begin with an upper case letter. All &#34;normal&#34; types inherit from <code>Any</code>, and absolutely everything inherits from <code>Object</code>.</p>

<p>You can restrict the type of values that a variable can hold by adding the type name to the declaration.</p>

<pre>    my Num $x = 3.4;
    my Int @a = 1, 2, 3;</pre>

<p>It is an error to try to put a value into a variable that is of a &#34;wrong&#34; type (ie neither the specified type nor a subtype).</p>

<p>A type declaration on an Array applies to its contents, so <code>my Str @s</code> is an array that can only contain strings.</p>

<h4><a class='u' href='#___top' title='click to go to top of document'
name="Introspection"
>Introspection</a></h4>

<p>You can learn about the direct type of a thing by calling its <code>.WHAT</code> method.</p>

<pre>    say &#34;foo&#34;.WHAT;     # Str()</pre>

<p>However if you want to check if something is of a specific type, there is a different way, which also takes inheritance into account and is therefore recommended:</p>

<pre>    if $x ~~ Int {
        say &#39;Variable $x contains an integer&#39;;
    }</pre>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="MOTIVATION"
>MOTIVATION</a></h3>

<p>The type system isn&#39;t very easy to grok in all its details, but there are good reasons why we need types:</p>

<dl>
<dt><a name="Programming_safety"
>Programming safety</a></dt>

<dd>
<p>If you declare something to be of a particular type, you can be sure that you can perform certain operations on it. No need to check.</p>

<dt><a name="Optimizability"
>Optimizability</a></dt>

<dd>
<p>When you have type informations at compile time, you can perform certain optimizations. Perl 6 doesn&#39;t have to be slower than C, in principle.</p>

<dt><a name="Extensibility"
>Extensibility</a></dt>

<dd>
<p>With type informations and multiple dispatch you can easily refine operators for particular types.</p>
</dd>
</dl>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO</a></h3>

<p><a href="http://perlcabal.org/syn/S02.html#Built-In_Data_Types" class="podlinkurl"
>http://perlcabal.org/syn/S02.html#Built-In_Data_Types</a>,</p>

[% option no-header %] [% option no-footer %]
